name: CI

on:
  push:
    branches-ignore:
      - '*travis*'
      - '*appveyor*'
      - '*gitlab*'
      - '*doozer*'
  pull_request:

jobs:
  test:
    name: ${{ matrix.os }} ${{ matrix.add_name }}
    runs-on: ${{ matrix.os }}
    strategy:
     matrix:
## XXX windows not yet working, macos not tested --- TODO
       include:
         - os:                       'ubuntu-20.04'
           add_name:                 '+ gui tests'
           bbbike_test_gui:          1
           use_modperl:              0
           use_bbbike_ppa:           1
           bbbike_test_skip_modperl: 1
         - os:                       'ubuntu-20.04'
           add_name:                 '+ mod_perl'
           bbbike_test_gui:          0
           use_modperl:              1
           use_bbbike_ppa:           1
           bbbike_test_skip_modperl: 0
         - os:                       'ubuntu-22.04'
           add_name:                 '+ gui tests'
           bbbike_test_gui:          1
           use_modperl:              0
           use_bbbike_ppa:           1
           bbbike_test_skip_modperl: 1

    steps:
    - name: network check
      shell: bash
      run: |
        set -ex
        echo "My IP address: $(curl -s ipinfo.io/ip)"; true
        { set -o pipefail; curl -s -I http://bbbike.de/robots.txt | head -1; } || { echo "::warning::network check on bbbike.de port 80 failed";            echo "BBBIKE_TEST_SKIP_BBBIKE_DE=1"  >> "$GITHUB_ENV"; }
        { set -o pipefail; curl -s -I https://download.bbbike.org | head -1; } || { echo "::warning::network check on download.bbbike.org port 443 failed"; echo "BBBIKE_TEST_SKIP_BBBIKE_ORG=1" >> "$GITHUB_ENV"; }
        { set -o pipefail; curl -s -I http://mydebs.bbbike.de:8000/dists/jessie/InRelease | head -1; true; } || { echo "::warning::network check on port 8000 failed"; }
    - name: apt hacks
      # the already installed libgd3 conflicts with libgd-dev to be installed
      # also, /etc/apt/sources.list should be sufficient; all the other repositories are possibly problematic
      run: |
        sudo rm -f /etc/apt/sources.list.d/*.list
        sudo apt-get update -qq
        sudo apt-get remove -y libgd3 nginx
      if: "startsWith(matrix.os, 'ubuntu-')"
    - uses: actions/checkout@v4
      with:
        show-progress: false
    - name: Build and test
      env:
        USE_SYSTEM_PERL:          1
        USE_MODPERL:              ${{ matrix.use_modperl }}
        USE_BBBIKE_PPA:           ${{ matrix.use_bbbike_ppa }}
        BBBIKE_TEST_SKIP_MODPERL: ${{ matrix.bbbike_test_skip_modperl }}
        BBBIKE_TEST_GUI:          ${{ matrix.bbbike_test_gui }}
        TRY_MYDEBS_BBBIKE_DE_FALLBACK_PORT: 1
      run: |
        set -e
        export CI_BUILD_DIR=$GITHUB_WORKSPACE
        # before_install:
        . port/ci/ci-functions.sh
        init_ci
        wrapper init_env_vars
        wrapper init_perl
        wrapper init_apt
        wrapper install_non_perl_dependencies
        wrapper install_perl_testonly_dependencies
        wrapper install_old_perl_dependencies
        wrapper install_webserver_dependencies
        wrapper install_selenium
        # install:
        wrapper install_perl_dependencies
        # before_script:
        wrapper init_cgi_config
        wrapper fix_cgis
        wrapper init_webserver_config
        wrapper start_webserver
        wrapper start_xserver
        wrapper init_webserver_environment
        wrapper start_selenium
        wrapper init_data
        # script:
        perl Makefile.PL && make test HARNESS_OPTIONS=j4 HARNESS_TIMER=1
        # after_script:
        make distcheck
        used_config
      if: "!startsWith(matrix.os,'windows-')"
  test_in_container:
    name: Docker tests with ${{ matrix.dist }}:${{ matrix.distver }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dist:                       debian
            distver:                    jessie
            bbbike_test_skip_mapserver: 0
            use_bbbike_ppa:             0
          - dist:                       debian
            distver:                    stretch
            bbbike_test_skip_mapserver: 0
            use_bbbike_ppa:             0
          - dist:                       debian
            distver:                    buster
            bbbike_test_skip_mapserver: 0
            use_bbbike_ppa:             0
          - dist:                       debian
            distver:                    bullseye
            bbbike_test_skip_mapserver: 0
            use_bbbike_ppa:             0
          - dist:                       debian
            distver:                    bookworm
            bbbike_test_skip_mapserver: 0
            use_bbbike_ppa:             0
          - dist:                       ubuntu
            distver:                    bionic
            bbbike_test_skip_mapserver: 0
            use_bbbike_ppa:             1
          - dist:                       ubuntu
            distver:                    trusty
            bbbike_test_skip_mapserver: 0
            use_bbbike_ppa:             0
          ## XXX only prepared, but this does not work yet (missing docker-bbbike support for non-system perl)
          #- dist:                       perl
          #  distver:                    5.38.0-slim-bookworm
          #  bbbike_test_skip_mapserver: 1
          #  use_bbbike_ppa:             0
          - dist:                       ubuntu
            distver:                    noble
            bbbike_test_skip_mapserver: 0
            use_bbbike_ppa:             1
    env:
      TRY_MYDEBS_BBBIKE_DE_FALLBACK_PORT: 1
    steps:
    - name: network check
      shell: bash
      run: |
        set -ex
        echo "My IP address: $(curl -s ipinfo.io/ip)"; true
        { set -o pipefail; curl -s -I http://bbbike.de/robots.txt | head -1; } || { echo "::warning::network check on bbbike.de port 80 failed";            echo "BBBIKE_TEST_SKIP_BBBIKE_DE=1"  >> "$GITHUB_ENV"; }
        { set -o pipefail; curl -s -I https://download.bbbike.org | head -1; } || { echo "::warning::network check on download.bbbike.org port 443 failed"; echo "BBBIKE_TEST_SKIP_BBBIKE_ORG=1" >> "$GITHUB_ENV"; }
        { set -o pipefail; curl -s -I http://mydebs.bbbike.de:8000/dists/jessie/InRelease | head -1; true; } || { echo "::warning::network check on port 8000 failed"; }
    - uses: actions/checkout@v4
    - name: Build and test
      run: |
        set -e
        sudo apt-get install -y libipc-run-perl
        ./miscsrc/docker-bbbike test --dist ${{ matrix.dist }} --distver ${{ matrix.distver }} --src local --jobs 8 \
            --env BBBIKE_TEST_SKIP_MAPSERVER=${{ matrix.bbbike_test_skip_mapserver }} \
            --env USE_BBBIKE_PPA=${{ matrix.use_bbbike_ppa }} \
            --env BBBIKE_TEST_SKIP_BBBIKE_DE=${BBBIKE_TEST_SKIP_BBBIKE_DE:-0} \
            --env BBBIKE_TEST_SKIP_BBBIKE_ORG=${BBBIKE_TEST_SKIP_BBBIKE_ORG:-0} \
            --build-env TRY_MYDEBS_BBBIKE_DE_FALLBACK_PORT=${{ env.TRY_MYDEBS_BBBIKE_DE_FALLBACK_PORT }}
