# -*- mode: perl; cperl-indent-level: 8; -*-

######################################################################
# Paths per system

use vars qw($BBBIKE_ROOT);
my $HTDOCS = "public";
my $BBBIKE_URL  = "BBBike";
my $APACHE_ROOT;
if (!$ENV{SERVER_NAME}) {
	require Sys::Hostname;
	$ENV{SERVER_NAME} = Sys::Hostname::hostname();
}
if (-d "/srv/www/bbbike-webserver/") { # assume live server
	if (($ENV{SERVER_NAME}||'') =~ m{bbbike-pps-jessie-staging|bbbike-staging}) {
		$APACHE_ROOT = "/srv/www/bbbike-webserver-staging";
	} else {
		$APACHE_ROOT = "/srv/www/bbbike-webserver";
	}
} elsif (-d "/home/e/eserte/src/bbbike/projects/bbbike.de-hosteurope") { # old-style home directory
	$APACHE_ROOT = "/home/e/eserte/src/bbbike/projects/bbbike.de-hosteurope";
} elsif (-d "/home/eserte/src/bbbike/projects/bbbike.de-hosteurope") { # new-style home directory
	$APACHE_ROOT = "/home/eserte/src/bbbike/projects/bbbike.de-hosteurope";
} else {
	$APACHE_ROOT = "XXX CANNOT DETECT APACHE_ROOT XXX";
}
$BBBIKE_ROOT = "$APACHE_ROOT/$BBBIKE_URL" if !defined $BBBIKE_ROOT;

## Prepared for blue-red deployments (separate caches)
#my($staging_color) = $BBBIKE_ROOT =~ m{-(blue|red)};
#$Strassen::Util::cacheprefix = "b_de_" . $staging_color;

# CONFIG ###########################################################
# Konfigurationsvariablen möglichst in bbbike.cgi.config setzen!

# Die beiden folgenden Variablen müssen geändert werden, die anderen
# bei Bedarf.

# URL für Verzeichnis, in dem die Imagemaps abgelegt werden.
# Sollte oftmals 0777 sein (wenn httpd unter nobody läuft).
$mapdir_url = '/BBBike/tmp';

# ... dazugehöriger Filesystem-Pfad
$mapdir_fs = "$APACHE_ROOT/$HTDOCS/BBBike/tmp";

# Mit ::OLD_AGREP = 1 wird das Verwenden von agrep verhindert
# (stattdessen wird versucht, String::Approx zu verwenden).
# agrep < 3.0 funktioniert nicht korrekt mit Umlauten.
# Auf hosteurope gibt es ein neues agrep; verwende dieses.
#$Strassen::OLD_AGREP = 1;
#$PLZ::OLD_AGREP      = 1;
#$PLZ::OLD_AGREP      = $PLZ::OLD_AGREP; # peacify -w

## im CS-Netz ist $ENV{PATH} beim Ausführen als CGI-Skript leer
## /usr/local ist mindestens auf dem lokalen System notwendig
$ENV{PATH} = '' if !defined $ENV{PATH};
$ENV{PATH} = "/usr/bin:/usr/local/bin:$ENV{PATH}"; # für Sys::Hostname, GD::Convert

# Falls Apache::Registry verwendet wird: TRUE, wenn die globalen
# Variablen nach Request-Ende gelöscht werden sollen
$modperl_lowmem = 0;

# Falls überprüft werden soll, ob die Imagemaps gegebüber dem CGI-Programm
# und den Datenfiles noch aktuell sind.
# 0: keine Überprüfung
# 1: Check mit dem strassen-Datenfile
# 2: Check mit dem strassen-Datenfile und dem CGI-Programm
$check_map_time = 1;

$detailmap_module = "MapServer";

# Verwendung des cgi-bin-Layouts, d.h. in cgi-bin ist nur bbbike.cgi, der
# Rest ist in cgi-bin/BBBike
$use_cgi_bin_layout = 1;

# Kommandozeile für das Wetterprogramm
#@weather_cmdline = ("$BBBIKE_ROOT/lib/wettermeldung2", qw(-dahlem1));
@weather_cmdline = ("$BBBIKE_ROOT/miscsrc/icao_metar.pl", qw(-sitecode EDDB -wettermeldung));

# For debugging: be verbose
$VERBOSE = 0;

$cannot_pdf = 0;
$can_palmdoc = 0;
$can_google_maps = 0;
$can_gpx = 1;
$can_kml = 1;
$can_qrcode_link = 1;

####################################################################

$can_mapserver = 1;

# Mapserver section
$mapserver_dir = "$APACHE_ROOT/$HTDOCS/mapserver/brb";
$mapserver_prog_relurl = "/cgi-bin/mapserv";
$mapserver_prog_url = "http://$ENV{SERVER_NAME}$mapserver_prog_relurl";
$bbd2esri_prog = "$BBBIKE_ROOT/miscsrc/bbd2esri";
if ($^O eq 'freebsd') {
	require Config;
	if ($Config::Config{archname} =~ /amd64/) {
		$mapserver_bin_dir = "/usr/local/src/work/mapserver-amd64";
	} else {
		$mapserver_bin_dir = "/usr/local/bin";
	}
	$mapserver_fonts_list = "fonts-freebsd.list";
} else {
	# The directories for mapserv and shp2img
	$mapserver_bin_dir = "/usr/bin";
	$mapserver_cgi_bin_dir = "/usr/lib/cgi-bin";
	$mapserver_fonts_list = "fonts-debian.list";
}
#$BBBikeDraw::MapServer::DEBUG = 1;

$local_route_dir = "$APACHE_ROOT/$HTDOCS/mapserver/touren";

# for mapserver_comment.cgi
#@MIME_Lite_send = ("smtp", "mail.zrz.tu-berlin.de");
#@MIME_Lite_send = ("smtp", "mittelerde.prz.tu-berlin.de");
@MIME_Lite_send = (); # use sendmail

$bbbike_images = "/$BBBIKE_URL/images";
$bbbike_html = "/$BBBIKE_URL/html";

@Strassen::datadirs = "$BBBIKE_ROOT/data";

$BBBikeDraw::GD::TTF_STREET = "$APACHE_ROOT/$HTDOCS/mapserver/brb/fonts/LucidaSansRegular.ttf";

$use_apache_session = 1;
$apache_session_module = 'Apache::Session::Counted';

# wapbbbike section
$wapbbbike_use_mapserver = 1;

# Otherwise bugs! cgi.t won't run cleanly
$use_exact_streetchooser = 1;

$bbbike_temp_blockings_file = "$BBBIKE_ROOT/data/temp_blockings/bbbike-temp-blockings.pl";

$bbbike_temp_blockings_optimized_file = "$BBBIKE_ROOT/data/temp_blockings/bbbike-temp-blockings-optimized.pl";

# XXX This option may be removed some day:
$use_cooked_street_data = 1;

$use_utf8 = 1;

$use_fragezeichen = 1;

# Switch between german and english?
$with_lang_switch = 1;

# sometimes necessary because of htmlproxy:
#$newstreetform_encoding = ".utf8";

# Use slightly larger image:
$use_region_image = 1;

$use_file_cache = 1;

$bbbikedraw_pdf_module = 'PDFCairo';

$Strassen::Util::TRACE_CACHE_WRITES = 1;

$StrassenNetz::use_heap = 1;

1;
