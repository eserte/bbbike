# -*- mode: perl; cperl-indent-level: 8; -*-

######################################################################
# Paths per system

require FindBin;
use vars qw($BBBIKE_ROOT);

my $HTTP_HOST = defined $ENV{HTTP_HOST} ? $ENV{HTTP_HOST} : "localhost";
my $is_dyndns = $HTTP_HOST eq 'bbbike.dyndns.org';
if (($ENV{SCRIPT_NAME}||'') =~ m{^/cgi-bin/}) {
    $use_cgi_bin_layout = 1;
}

$ENV{HOME} = '/home/e/eserte'; # real value for wettermeldung2 and @Strassen::datadirs

$BBBIKE_ROOT = "$ENV{HOME}/src/bbbike" if !defined $BBBIKE_ROOT;

# CONFIG ###########################################################
# Konfigurationsvariablen möglichst in bbbike.cgi.config setzen!

if (defined $ENV{SERVER_SOFTWARE} && $ENV{SERVER_SOFTWARE} =~ /HTTPi|TinyHTTPD/) { # started from runbbbikecgi
    $mapdir_url = '/bbbike/tmp';
    $mapdir_fs  = "$FindBin::RealBin/../tmp";
}

# Mit ::OLD_AGREP = 1 wird das Verwenden von agrep verhindert
# (stattdessen wird versucht, String::Approx zu verwenden).
# agrep < 3.0 funktioniert nicht korrekt mit Umlauten.
# Auf hosteurope gibt es ein neues agrep; verwende dieses.
#$Strassen::OLD_AGREP = 1;
#$PLZ::OLD_AGREP      = 1;
#$PLZ::OLD_AGREP      = $PLZ::OLD_AGREP; # peacify -w

$ENV{PATH} .= ":/usr/local/bin" if $ENV{PATH} !~ m{/usr/local/bin}; # for netpbm

# Falls Apache::Registry verwendet wird: TRUE, wenn die globalen
# Variablen nach Request-Ende gelöscht werden sollen
$modperl_lowmem = 0;

# Falls überprüft werden soll, ob die Imagemaps gegebüber dem CGI-Programm
# und den Datenfiles noch aktuell sind.
# 0: keine Überprüfung
# 1: Check mit dem strassen-Datenfile
# 2: Check mit dem strassen-Datenfile und dem CGI-Programm
$check_map_time = 1;

$detailmap_module = "MapServer";

# Kommandozeile für das Wetterprogramm
@weather_cmdline = ("$BBBIKE_ROOT/lib/wettermeldung2", qw(-dahlem1));

# For debugging: be verbose
$VERBOSE = 0;

$cannot_pdf = 0;
$can_palmdoc = 0;
$can_google_maps = 0;
$can_gpx = 1;
$can_kml = 1;

####################################################################

$can_mapserver = 1;

# Mapserver section
$mapserver_dir = "$BBBIKE_ROOT/mapserver/brb";
if (0) { # usually linked to CVS version
    $mapserver_prog_relurl = "/~eserte/cgi/mapserv.cgi";
    $mapserver_prog_url = "http://$HTTP_HOST$mapserver_prog_relurl";
} else { # This is the newest mapserver installed from FreeBSD ports (but with many bugs)
    $mapserver_prog_relurl = "/cgi-bin/mapserv";
    $mapserver_prog_url = "http://$HTTP_HOST$mapserver_prog_relurl";
}

$mapserver_address_url = "http://$HTTP_HOST/bbbike/cgi/mapserver_address.cgi";
$bbd2esri_prog = "$BBBIKE_ROOT/miscsrc/bbd2esri";
require Config;
if ($Config::Config{archname} =~ m{amd64-freebsd} && -d "/usr/local/src/work/mapserver-amd64") {
    $mapserver_bin_dir = "/usr/local/src/work/mapserver-amd64";
} else {
    #$mapserver_bin_dir = "/usr/local/src/mapserver/mapserver-3.6.4";
    $mapserver_bin_dir = "/usr/local/bin";
}
$mapserver_fonts_list = "fonts-freebsd.list";
#$BBBikeDraw::MapServer::DEBUG = 1;

$local_route_dir = "$BBBIKE_ROOT/mapserver/touren";

# for mapserver_comment.cgi
#@MIME_Lite_send = ("smtp", "mail.zrz.tu-berlin.de");
#@MIME_Lite_send = ("smtp", "mittelerde.prz.tu-berlin.de");
@MIME_Lite_send = (); # use sendmail

@Strassen::datadirs = "$BBBIKE_ROOT/data";

$use_apache_session = 1;
$apache_session_module = 'Apache::Session::Counted';

# wapbbbike section
$wapbbbike_use_mapserver = 1;

$WAP_URL = "/bbbike/cgi/wapbbbike.cgi";

# Otherwise bugs! cgi.t won't run cleanly
$use_exact_streetchooser = 1;

$bbbike_temp_blockings_file = "$BBBIKE_ROOT/data/temp_blockings/bbbike-temp-blockings.pl";

$bbbike_temp_blockings_optimized_file = "$BBBIKE_ROOT/data/temp_blockings/bbbike-temp-blockings-optimized.pl";

# XXX This option may be removed some day:
$use_cooked_street_data = 1;

$use_fragezeichen = 1;

# Switch between german and english?
$with_lang_switch = 1;

# sometimes necessary because of htmlproxy:
#$newstreetform_encoding = ".utf8";

# Use slightly larger image:
$use_region_image = 1;

if ($is_dyndns) {
    for ($mapserver_prog_url, $mapserver_address_url) {
	s{http://www}{http://bbbike.dyndns.org};
    }
}

$use_file_cache = 1;

$bbbikedraw_pdf_module = 'PDFCairo';

$Strassen::Util::TRACE_CACHE_WRITES = 1;

$StrassenNetz::use_heap = 1;

# zum Testen, zusätzliche Variablen
$^W = 1 unless defined $ENV{SERVER_NAME}; # i.e. commandline operation
#$debug = 1;

1;
